{"version":3,"sources":["util/rest.util.js"],"names":["require","stringify","RestError","status","statusText","data","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","concat","name","response","Error","code","res","payload","json","success","error","status200","status201","status400","status500"],"mappings":"s1EAAoBA,QAAQ,eAArBC,mBAAAA,UAEDC,qBACJ,SAAAA,EAAYC,EAAQC,EAAYC,GAAM,IAAAC,EAAA,OAAAC,gBAAAC,KAAAN,IACpCI,EAAAG,2BAAAD,KAAAE,gBAAAR,GAAAS,KAAAH,KAAA,GAAAI,OAAST,EAAT,KAAAS,OAAmBR,EAAnB,MAAAQ,OAAkCX,UAAUI,OACvCQ,KAAO,YACZP,EAAKQ,SAAW,CAAEX,OAAAA,EAAQC,WAAAA,EAAYC,KAAAA,GAHFC,sCADhBS,yCASxB,IAAMD,SAAW,CACfX,OADe,SACRa,EAAMC,EAAKC,GACZF,EAAO,IACTC,EAAId,OAAOa,GAAMG,KAAK,CACpBC,SAAS,EACTf,KAAMa,GAAW,KAGnBD,EAAId,OAAOa,GAAMG,KAAK,CACpBC,SAAS,EAETC,MAAOH,KAKbI,UAAW,SAAUL,EAAKZ,GACxBY,EAAId,OAAO,KAAKgB,KAAK,CACnBC,SA7BcpB,EAAbC,KAAAA,GA8Ba,MAIlBsB,UAAW,SAAUN,EAAKZ,GACxBY,EAAId,OAAO,KAAKgB,KAAK,CACnBC,SAAS,EAjCbf,KAAAA,GAAA,MAsCAmB,UAAW,SAAUP,EAAKI,GArCxBJ,EAAAd,OAAA,KAAAgB,KAAA,CACAC,SAAA,EACAC,MAAKP,UAAWO,MAAAI,UAAhB,SAAAR,EAAAI,GAHoCJ,EAAAd,OAAA,KAAAgB,KAAA,CAIrCC,SAAA,EA4CGC,MAAOpB,UAAUoB","file":"rest.util.js","sourcesContent":["const {stringify} = require('flatted/cjs');\n\nclass RestError extends Error {\n  constructor(status, statusText, data) {\n    super(`${status} ${statusText}: ${stringify(data)}`)\n    this.name = 'RestError'\n    this.response = { status, statusText, data }\n  }\n}\n\n// TODO: remove application level wrappers\nconst response = {\n  status(code, res, payload) {\n    if (code < 300) {\n      res.status(code).json({\n        success: true,\n        data: payload || {},\n      });\n    } else {\n      res.status(code).json({\n        success: false,\n        //        error: JSON.stringify(payload),\n        error: payload,\n      });\n    }\n  },\n\n  status200: function (res, data) {\n    res.status(200).json({\n      success: true,\n      data: data || {},\n    });\n  },\n\n  status201: function (res, data) {\n    res.status(201).json({\n      success: true,\n      data: data || {},\n    });\n  },\n\n  status400: function (res, error) {\n    res.status(400).json({\n      success: false,\n      error: stringify(error),\n    });\n  },\n\n  status500: function (res, error) {\n    res.status(500).json({\n      success: false,\n      error: stringify(error),\n    });\n  },\n}\n\n\nexport {\n  RestError,\n  response\n}\n"]}