{"version":3,"sources":["util/api.util.js"],"names":["_httpStatusCodes","_interopRequireDefault","require","_queryString","_axiosWrapper","_rest","blocUrl","strato12Url","strato23Url","cirrusUrl","externalStorageUrl","Endpoint","ACCOUNT","concat","USERS","USER","FILL","STATE","STATES","TXRESULTS","SEND","KEY","SEARCH","CHAIN","CHAINS","EXT_UPLOAD","EXT_ATTEST","EXT_VERIFY","EXT_DOWNLOAD","EXT_LIST","endpointTemplate","options","arguments","length","undefined","params","Object","getOwnPropertyNames","reduce","acc","key","encodeURIComponent","query","constructQuerySearch","constructQuery","endpoint","chainIds","queryObject","chainId","constructEndpoint","joinedChainIds","join","replace","stringify","assign","chainid","queryString","resolve","stateQuery","constructMetadata","contractName","metadata","enableHistory","history","hasOwnProperty","isAsync","indexOf","_typeof","String","enableIndex","newContracts","noindex","contract","config","includes","VM","Array","isArray","user","_options","headers","Authorization","token","getNodeUrl","node","nodes","nodeId","url","_callee","_body","body","regeneratorRuntime","wrap","_context","prev","next","nodeObject","setAuthHeaders","txParams","gasLimit","gasPrice","configTxParams","abrupt","stop","get","_callee2","host","_args2","_context2","ax","postue","_callee3","data","_context3"],"mappings":"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","file":"api.util.js","sourcesContent":["import RestStatus from \"http-status-codes\";\nimport queryString from \"query-string\";\nimport ax from \"../axios-wrapper\";\nimport { RestError } from \"./rest.util\";\n\nconst blocUrl = \"/bloc/v2.2\";\nconst strato12Url = \"/strato-api/eth/v1.2\";\nconst strato23Url = \"/strato/v2.3\";\nconst cirrusUrl = \"/cirrus/search\";\nconst externalStorageUrl = \"/apex-api/bloc/file\";\n\nconst Endpoint = {\n  ACCOUNT: `${strato12Url}/account`,\n  USERS: `${blocUrl}/users`,\n  USER: `${blocUrl}/users/:username`,\n  FILL: `${blocUrl}/users/:username/:address/fill`,\n  STATE: `${blocUrl}/contracts/:name/:address/state`,\n  STATES: `${blocUrl}/contracts/states`,\n  TXRESULTS: `${blocUrl}/transactions/results`,\n  SEND: `${strato23Url}/transaction`,\n  KEY: `${strato23Url}/key`,\n  SEARCH: `${cirrusUrl}/:name`,\n  CHAIN: `${blocUrl}/chain`,\n  CHAINS: `${blocUrl}/chains`,\n  EXT_UPLOAD: `${externalStorageUrl}/upload`,\n  EXT_ATTEST: `${externalStorageUrl}/attest`,\n  EXT_VERIFY: `${externalStorageUrl}/verify`,\n  EXT_DOWNLOAD: `${externalStorageUrl}/download`,\n  EXT_LIST: `${externalStorageUrl}/list`,\n};\n\nfunction constructEndpoint(endpointTemplate, options = {}, params = {}) {\n  // expand template\n  const endpoint = Object.getOwnPropertyNames(params).reduce((acc, key) => {\n    return acc.replace(`:${key}`, encodeURIComponent(params[key]));\n  }, endpointTemplate);\n  // concat query patameters\n  const query =\n    endpointTemplate === Endpoint.SEARCH\n      ? constructQuerySearch(options)\n      : constructQuery(options);\n  return `${endpoint}${query}`;\n}\n\nfunction constructQuerySearch(options) {\n  if (options === undefined) {\n    return \"\";\n  }\n\n  const chainIds = options.chainIds;\n  if (chainIds !== undefined && chainIds.length !== undefined && chainIds.length > 0) {\n    if (chainIds.length == 1) {\n      const queryObject = Object.assign(\n        { chainId: `eq.${chainIds[0]}` },\n        options.query\n      );\n      const query = `?${queryString.stringify(queryObject)}`;\n      return query;\n    } else {\n      const joinedChainIds = chainIds.join();\n      const queryObject = Object.assign(\n        { chainId: `in.${joinedChainIds}` },\n        options.query\n      );\n      const query = `?${queryString.stringify(queryObject)}`;\n      return query;\n\n    }\n  } else {\n    const query = `?${queryString.stringify(options.query)}`;\n    return query;\n  }\n}\n\nfunction constructQuery(options) {\n  if (options === undefined) {\n    return \"\";\n  }\n  const queryObject = Object.assign(\n    { chainid: options.chainIds },\n    !options.isAsync ? { resolve: true } : {},\n    options.stateQuery,\n    options.query\n  );\n  const query = `?${queryString.stringify(queryObject)}`;\n  return query;\n}\n\n/**\n * This function constructes metadata that can be used to control the history and index flags\n * @method{constructMetadata}\n * @param{Object} options flags for history and indexing\n * @param{String} contractName\n * @returns{()} metadata\n */\nfunction constructMetadata(options, contractName) {\n  const metadata = {};\n  if (options === {}) return metadata;\n\n  // history flag (default: off)\n  metadata.history = \"\";\n  if (options.enableHistory) {\n    metadata.history = contractName;\n  }\n  if (options.hasOwnProperty(\"history\")) {\n    if (Array.isArray(options.history)) {\n      metadata.history =\n        metadata.history.length === 0 ||\n        options.history.indexOf(metadata.history) >= 0\n          ? options.history.join(\",\")\n          : `${metadata.history},${options.history.join(\",\")}`;\n    } else if (typeof options.history === String) {\n      metadata.history =\n        metadata.history.length === 0 ||\n        options.history.indexOf(metadata.history) >= 0\n          ? options.history\n          : `${metadata.history},${options.history}`;\n    }\n  }\n\n  // index flag (default: on)\n  if (options.hasOwnProperty(\"enableIndex\") && !options.enableIndex) {\n    metadata.noindex = contractName;\n  }\n  if (options.hasOwnProperty(\"noindex\")) {\n    const newContracts = options.noindex\n      .filter(contract => contract !== contractName)\n      .join();\n    metadata.noindex = `${options.noindex},${newContracts}`;\n  }\n  // VM\n  if (options.config.hasOwnProperty(\"VM\")) {\n    if (![\"EVM\", \"SolidVM\"].includes(options.config.VM)) {\n      throw new RestError(\n        RestStatus.BAD_REQUEST,\n        `Illegal VM type ${options.VM}`,\n        { options }\n      );\n    }\n    metadata.VM = options.config.VM;\n  }\n\n  // TODO: construct the \"nohistory\" and \"index\" fields for metadata if needed\n  // The current implementation only constructs \"history\" and \"noindex\"\n\n  return metadata;\n}\n\nfunction setAuthHeaders(user, _options) {\n  const options = Object.assign({}, _options);\n  options.headers = Object.assign({}, _options.headers, {\n    Authorization: `Bearer ${user.token}`\n  });\n  return options;\n}\n\n/*\n  get the url for the node by node id#\n */\nfunction getNodeUrl(options) {\n  const nodeId = options.node || 0;\n  const nodeObject = options.config.nodes[nodeId];\n  return nodeObject.url;\n}\n\nasync function post(url, endpoint, _body, options) {\n  function createBody(_body, options) {\n    // array\n    if (Array.isArray(_body)) return _body;\n    // object\n    const body = Object.assign({}, _body);\n    const configTxParams = options.config ? options.config.txParams : undefined;\n    // in order of priority: 1:body, 2:options, 3:config, 4:default\n    body.txParams = Object.assign(\n      { gasLimit: 32100000000, gasPrice: 1 },\n      configTxParams,\n      options.txParams,\n      _body.txParams\n    );\n    return body;\n  }\n\n  const body = createBody(_body, options);\n  return ax.post(url, endpoint, body, options);\n}\n\nasync function get(host, endpoint, options = {}) {\n  return ax.get(host, endpoint, options);\n}\n\nasync function postue(host, endpoint, data, options) {\n  // TODO - @samrit do we need txParams here\n  return ax.postue(host, endpoint, data, options);\n}\n\nexport {\n  constructEndpoint,\n  constructMetadata,\n  Endpoint,\n  get,\n  getNodeUrl,\n  post,\n  postue,\n  setAuthHeaders\n};\n"]}