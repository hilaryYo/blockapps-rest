{"version":3,"sources":["util/oauth.client.js"],"names":["_commander","_interopRequireDefault","require","_fs","_fsUtil","_oauth","_tcpPortUsed","_http","_https","_queryString","_url","stringify","envPath","envfile","envConfig","DUMMY_SSL_KEY","DUMMY_SSL_CERT","process","fs","appendFileSync","err","portNumber","parseFileSync","flows","authorizationCode","clientCredential","Array","console","commander","option","concat","resourceOwnerPasswordCredential","parse","argv","existsSync","config","error","res","redirectUriParsed","end","callbackPath","exit","port","protocol","isArray","nodes","urlParts","undefined","oauth","requestListener","_callee","req","query","acToken","_envContent2","regeneratorRuntime","wrap","_context","prev","next","url","writeHead","Location","signinUri","abrupt","envContent","writeFileSync","length","qs","code","getAccessTokenByAuthCode","sent","env","token","access_token","stringifySync","log","Content-Type","write","logoutRedirectUri","id_token","stop","tcpPortUsed","check","oauthUtil","init","getSigninURL","flow","ex","clientId","clientSecret","cert","username","password","getAccessTokenByClientSecret","tokenGetterUrl","ccToken","_context2","t1","serviceUsername","servicePassword","getAccessTokenByResourceOwnerCredential","ropcToken","t2","options","key","https","createServer","listen","http","host","run","message"],"mappings":"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","file":"oauth.client.js","sourcesContent":["import commander from \"commander\";\nimport fs from \"fs\";\nimport fsUtil from \"./fsUtil\";\nimport oauthUtil from \"./oauth.util\";\nimport tcpPortUsed from \"tcp-port-used\";\nimport http from \"http\";\nimport https from \"https\";\nimport qs from \"query-string\";\nimport url from \"url\";\nconst { stringify } = require(\"flatted/cjs\");\nconst envPath = \".env\";\nconst envfile = require(\"envfile\");\nlet envConfig = {};\n\nconst DUMMY_SSL_KEY = `-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDBVqh671M27QJW\nekIc/QkKnF9I3rM7/XXyvFlYAAscRRNs9TpxTGW8n/KnBMeKFdPwj19YLMk43tf4\nvhMBfCWQP2dXa7TwhXYClmpKXAllWDdyKAfVmH3ccErDAyab/ZDdyhleR65eLqbB\nvc5Gf/bIksS7YtV4dmP1wd0SOrmoKFS+t4gcR6+NVWsHaeqx3avS7VJedgNPVKjb\n97sbHA/PTzTEOgZlHEtIIz+e1ESCPNMdr2DN04KC+3ivx24kk4IsXJHD+8m7IImx\nT4q+mf9j6EZtbj9CA2BaSHLx+h8EOq4I2RIMSDYjU8R7Xk1QrVdkpS0t9TxPjWRy\niuu9LF9tAgMBAAECggEAWliFeJUXnMYaXpDZDjTMIdI60JGIzhK+KEUNtwqmJnq8\n/iCGQ+WAcSmJObUJDaTvmi1VT532FgZEhC9GMF50KzkFsJtbPT4QjFr/pmnl1h7o\nIgdEyfJtdjJfLUvuodxW8t17B0yV1dsU/9oTZ2xqxQWYuzwPJzCju3bxOJCKq2ID\n71Xl32yQALwsCNyb74RvMSJgk28PGqjU+zhQp7Nw2xoy/Oz+i9nZkH1YPZipkX1S\n0jtj2z5XVsW+MFgPnMuy8Ut3Rn/zAWSi/PpSh1e4qPLMlmc7a7OFpbEpCmceAlnj\nzmqo+U5Ns9MF5gWdspKC9qD8ZqKES2jWCPCrrjXBHQKBgQD7AVj55xVej0mI2FOw\nxehBwSd56Xm0potvsdHNe1Nb6DPU9OoriA/6Gp0sA+EA/8AKo+41uHEW7BZXtHGN\nZCphn4V8CqhMNtoACWdrfSwocJmoxzQt2/PDlyPSUTozxPnzwmOXP9bCatcUiNYq\nlyb4EH9dNXsPDK02xPz+Ooj/AwKBgQDFL4yBEqT3pZz3qrBN7rsWHQckPAu9/2Vk\nf4sImV8nsIvL0VoKdB7N3E6BycVWRDZhJKGYTKDvCWG5CNvIuFuwEawsIpuxVRlr\nhjVQno5/u8PMecydQbleJE/Ud4VXuojw+aR4xIILgXGygUKywHpdNnCI7dhV0hNm\nWMLlDUNkzwKBgG4mcT15w07z4nlDNbblor74XLKLWvWEALzLdB6QeExk4hoaQIlJ\n9Hj1JPQj36HomgYRWoAIqNg+Uq+6Z/p8cnzU3GdK5gBMMe7CMbhh/fbhMw12Hdfi\nJl82/GlXbAs77dSjAcFmKoC3EhvY0ONv4ZIK61mkFpTMI1ddqwiF94ixAoGAflK8\n33+TQbfOfHfUJMkY/8yu4464Mwsn6J8w8dxXsnSOyo8e8O19QoKtpMYfbumaMNen\n0orc2uYWvdSoAMniq0RXGZs+RPfwpgq/oxtAzSH8CMXKyL/vQhlfLw021oIA8ufr\nbxbs/PP7Y9EdaqiWe5rBs2c0HZ7MoNeiW90IXM8CgYEA5ZEjdlwDsDANNb4MocbI\npOkAY1bR1oTsNnEC3nNX+rMKOWT2NLBNSS1kS+6M68Ctky1XFOqgtRZZCG8PY7ou\ngB1T/TRMjqnNJWOvycD4uIUwIdp0NmGboRqdGphbJinMmXfg8PcC/QM2fncG8SCK\niHm1aYKK8r/QobR/qJsWtuI=\n-----END PRIVATE KEY-----`;\n\nconst DUMMY_SSL_CERT = `-----BEGIN CERTIFICATE-----\nMIIDojCCAooCCQDFBdwwu1NhADANBgkqhkiG9w0BAQsFADCBkjELMAkGA1UEBhMC\nVVMxETAPBgNVBAgMCE5ldyBZb3JrMREwDwYDVQQHDAhCcm9va2x5bjEXMBUGA1UE\nCgwOQmxvY2tBcHBzIEluYy4xHjAcBgNVBAMMFXRlc3RuZXQuYmxvY2thcHBzLm5l\ndDEkMCIGCSqGSIb3DQEJARYVc3VwcG9ydEBibG9ja2FwcHMubmV0MB4XDTE4MDIx\nMzIwNTQxNVoXDTIxMDIxMjIwNTQxNVowgZIxCzAJBgNVBAYTAlVTMREwDwYDVQQI\nDAhOZXcgWW9yazERMA8GA1UEBwwIQnJvb2tseW4xFzAVBgNVBAoMDkJsb2NrQXBw\ncyBJbmMuMR4wHAYDVQQDDBV0ZXN0bmV0LmJsb2NrYXBwcy5uZXQxJDAiBgkqhkiG\n9w0BCQEWFXN1cHBvcnRAYmxvY2thcHBzLm5ldDCCASIwDQYJKoZIhvcNAQEBBQAD\nggEPADCCAQoCggEBAMFWqHrvUzbtAlZ6Qhz9CQqcX0jeszv9dfK8WVgACxxFE2z1\nOnFMZbyf8qcEx4oV0/CPX1gsyTje1/i+EwF8JZA/Z1drtPCFdgKWakpcCWVYN3Io\nB9WYfdxwSsMDJpv9kN3KGV5Hrl4upsG9zkZ/9siSxLti1Xh2Y/XB3RI6uagoVL63\niBxHr41Vawdp6rHdq9LtUl52A09UqNv3uxscD89PNMQ6BmUcS0gjP57URII80x2v\nYM3TgoL7eK/HbiSTgixckcP7ybsgibFPir6Z/2PoRm1uP0IDYFpIcvH6HwQ6rgjZ\nEgxINiNTxHteTVCtV2SlLS31PE+NZHKK670sX20CAwEAATANBgkqhkiG9w0BAQsF\nAAOCAQEATafWoYdQmUxiIsXitgHMV51f15KOWS6vsa+XfKPLFRFIbw8bYl/PdbJp\nXoxywIf9rz7/+Hme6JXhIIao26ahXWG34J06CJ3kvnQcFzrUJ4AZLZrs3E0yzsNK\n4zgdiPRK3TVCwzqnA6OkajLPuhisheAtoB2T5pR+SeC064cB3lhSgnFS31ePGmgv\nb4qiXqr2JW4Db8yW0eKYrfwhf9WoElVlgO1ogqZS+ygeKYFfoNhQ5wQ+c43jDK5G\nEDxFZuwghztIpmp2ItFOIxpsiZnEVlHNsq4H6YcZg4XENKhb9/lgIFiYADDbAEcq\npBMYLinJZN+jM/Xddr18fL0obdkk5Q==\n-----END CERTIFICATE-----`;\n\nif (!fs.existsSync(envPath)) {\n  fs.appendFileSync(envPath, \"\", function(err) {\n    if (err) throw err;\n    console.log(\".env file is created successfully.\");\n  });\n}\n\nenvConfig = envfile.parseFileSync(envPath);\n\nconst flows = {\n  authorizationCode: \"authorization-code\",\n  clientCredential: \"client-credential\",\n  resourceOwnerPasswordCredential: \"resource-owner-password-credential\"\n};\n\ncommander\n  .option(\"-c, --config [path]\", \"Config file\", \"config.yaml\")\n  .option(\n    \"-f, --flow [oauth-flow]\",\n    `The oauth flow to user. Valid options are \"${flows.clientCredential}\" (default) or \"${flows.authorizationCode}\" or \"${flows.resourceOwnerPasswordCredential}\"`,\n    \"client-credential\"\n  )\n  .option(\n    \"-e, --env [tokenName]\",\n    \"Create a .env file to include the specified token\",\n    null\n  )\n  .option(\n    \"-u, --username [username]\",\n    `Username or client-id depending on the flow (optional)`,\n    null\n  )\n  .option(\n    \"-p, --password [password]\",\n    `Password or client-secret depending on the flow (optional)`,\n    null\n  )\n  .parse(process.argv);\n\nif (!fs.existsSync(commander.config)) {\n  console.error(\n    `Could not open config file at location \"${commander.config}\". You may need to specify --config option`\n  );\n  process.exit(1);\n}\n\nconst config = fsUtil.getYaml(commander.config);\n\nlet redirectUriParsed;\ntry {\n  redirectUriParsed = url.parse(config.nodes[0].oauth.redirectUri)\n} catch(err) {\n  console.error('Unable to parse redirectUri as the url', err);\n  process.exit(10);\n}\n\nlet portNumber;\nif (redirectUriParsed.port) {\n  portNumber = parseInt(redirectUriParsed.port)\n} else {\n  portNumber = (redirectUriParsed.protocol === 'https:') ? 443 : 80\n}\n\nif (\n  !config ||\n  !Array.isArray(config.nodes) ||\n  config.nodes.length === 0 ||\n  config.nodes[0].oauth === undefined\n) {\n  console.error(\"Invalid config\");\n  process.exit(3);\n}\n\nconst run = async function() {\n  const portInUse = await tcpPortUsed.check(portNumber);\n  if (portInUse) {\n    console.error(`Port ${portNumber} is in use.`);\n    process.exit(4);\n  }\n\n  const oauth = oauthUtil.init(config.nodes[0].oauth);\n\n  const signinUri = oauth.getSigninURL();\n  async function requestListener(req, res) {\n    // TODO: better route matching\n    \n    if (req.url === '/') {\n      res.writeHead(302, {\n        'Location': signinUri\n      });\n      res.end();\n      return\n    }\n\n    const callbackPath = redirectUriParsed.pathname;\n    \n    if (req.url.indexOf(callbackPath) !== 0 ) {\n      if (req.url !== '/favicon.ico') {\n        console.log('Unknown URI was called: ' + req.url);\n      }\n      res.writeHead(404);\n      res.end();\n      return\n    }\n    \n    const urlParts = req.url.split(\"?\");\n    if (urlParts.length < 2) {\n      console.error(\"Missing query string in redirectUri callback url.\");\n      return\n    }\n    const query = qs.parse(urlParts[1]);\n    if (query.code === undefined) {\n      console.error('Missing required query parameter \"code\" in redirectUri callback');\n      return\n    }\n    const acToken = await oauth.getAccessTokenByAuthCode(query.code);\n\n    if (commander.env) {\n      envConfig[commander.env] = acToken.token.access_token;\n      const envContent = envfile.stringifySync(envConfig);\n      fs.writeFileSync(envPath, envContent);\n      console.log(\".env file was saved!\");\n    }\n    console.log(\"Token obtained by authorization code flow is:\");\n    console.log(stringify(acToken, null, 2));\n    res.writeHead(200, { \"Content-Type\": \"text/html; charset=utf-8\" });\n    res.write(`\n      <html>\n        <head>\n          <title>\n            BlockApps Token Exchange Utility\n          </title>\n          <meta name=\"google\" content=\"notranslate\">\n          <script src=\"https://code.jquery.com/jquery-3.3.1.slim.min.js\" integrity=\"sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo\" crossorigin=\"anonymous\"></script>\n          <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js\" integrity=\"sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1\" crossorigin=\"anonymous\"></script>\n          <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js\" integrity=\"sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM\" crossorigin=\"anonymous\"></script>\n          <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\" integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\" crossorigin=\"anonymous\">\n          <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.8.1/css/all.css\" integrity=\"sha384-50oBUHEmvpQ+1lW4y57PTFmhCaXp0ML5d60M1M7uH2+nqUivzIebhndOJK28anvf\" crossorigin=\"anonymous\">\n          <style>\n            pre {\n              white-space: pre-wrap;       /* Since CSS 2.1 */\n              white-space: -moz-pre-wrap;  /* Mozilla, since 1999 */\n              white-space: -pre-wrap;      /* Opera 4-6 */\n              white-space: -o-pre-wrap;    /* Opera 7 */\n              word-wrap: break-word;       /* Internet Explorer 5.5+ */\n              background-color: #e7e7e7;\n              padding-left: 24px;\n              padding-right: 24px;\n              border-radius: 4px;\n            }\n            body {\n              padding: 24px;\n            }\n            .padButton {\n              padding-bottom: 12px;\n            }\n            textarea {\n              border: none;\n              color: #fff;\n            }\n          </style>\n          <script>\n            function copyToClipboard(text) {\n              var textArea = document.createElement(\"textarea\");\n              textArea.value = text;\n              document.body.appendChild(textArea);\n              textArea.focus();\n              textArea.select();\n              document.execCommand('copy')\n              document.body.removeChild(textArea);\n            }\n            function logout(){\n              window.location='${oauth.logOutUrl}?redirect_uri=${config.nodes[0].oauth.logoutRedirectUri}/'\n            }\n          </script>\n        </head>\n        <body>\n          <div class=\"container\">\n            <div class=\"row\">\n              <div class=\"offset-sm-10 col-sm-1 text-right padButton\">\n                  <button onclick=\"logout()\" class=\"btn btn-outline-dark btn-sm\"> Logout </button>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"offset-sm-1 col-sm-9\">\n                <h4>\n                  <small class=\"text-muted\">Access Token</small>\n                </h4>\n              </div>\n              <div class=\"col-sm-1 text-right\">\n                <button onclick=\"copyToClipboard('${acToken.token.access_token}');\" title=\"Copy to clipboard\" class=\"btn btn-outline-dark btn-sm\">\n                  <i class=\"fas fa-clipboard\"></i>\n                </button>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"offset-sm-1 col-sm-10\">\n                <pre>\n                  <code>\n                    ${acToken.token.access_token}\n                  </code>\n                </pre>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"offset-sm-1 col-sm-9\">\n                <h4>\n                  <small class=\"text-muted\">ID Token</small>\n                </h4>\n              </div>\n              <div class=\"col-sm-1 text-right\">\n                <button onclick=\"copyToClipboard('${acToken.token.id_token}');\" title=\"Copy to clipboard\" class=\"btn btn-outline-dark btn-sm\">\n                  <i class=\"fas fa-clipboard\"></i>\n                </button>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"offset-sm-1 col-sm-10\">\n                <pre>\n                  <code>\n                    ${acToken.token.id_token}\n                  </code>\n                </pre>\n              </div>\n            </div>\n          </div>\n        </body>\n      </html>\n    `);\n    res.end();\n  }\n  switch (commander.flow) {\n    case flows.clientCredential:\n      if (\n        config.nodes[0].oauth.clientId === undefined ||\n        config.nodes[0].oauth.clientSecret === undefined\n      ) {\n        console.error(\n          `Client id and client secret must be defined in config to use ${flows.clientCredential} flow`\n        );\n        process.exit(5);\n      }\n\n      try {\n        let ccToken;\n        if (commander.username && commander.password) {\n          ccToken = await oauth.getAccessTokenByClientSecret(\n            commander.username,\n            commander.password\n          );\n        } else {\n          ccToken = await oauth.getAccessTokenByClientSecret();\n        }\n        if (commander.env) {\n          envConfig[commander.env] = ccToken.token.access_token;\n          const envContent = envfile.stringifySync(envConfig);\n          fs.writeFileSync(envPath, envContent);\n          console.log(\".env file was saved!\");\n        }\n        console.log(`Token obtained by ${commander.flow} flow is:`);\n        console.log(stringify(ccToken, null, 2));\n      } catch (err) {\n        console.log(err);\n        process.exit(8);\n      }\n      break;\n    case flows.resourceOwnerPasswordCredential:\n      if (\n        config.nodes[0].oauth.clientId === undefined ||\n        config.nodes[0].oauth.clientSecret === undefined\n      ) {\n        console.error(\n          `Client id and client secret must be defined in config to use ${flows.resourceOwnerPasswordCredential} flow`\n        );\n        process.exit(6);\n      }\n\n      if (\n        !(config.nodes[0].oauth.serviceUsername || commander.username) ||\n        !(config.nodes[0].oauth.servicePassword || commander.password)\n      ) {\n        console.error(\n          `Username and password must be defined in config or provided as an argument to use ${flows.resourceOwnerPasswordCredential} flow`\n        );\n        process.exit(7);\n      }\n\n      try {\n        const ropcToken = await oauth.getAccessTokenByResourceOwnerCredential(\n          commander.username,\n          commander.password\n        );\n        if (commander.env) {\n          envConfig[commander.env] = ropcToken.token.access_token;\n          const envContent = envfile.stringifySync(envConfig);\n          fs.writeFileSync(envPath, envContent);\n          console.log(\".env file was saved!\");\n        }\n        console.log(`Token obtained by ${commander.flow} flow is:`);\n        console.log(stringify(ropcToken, null, 2));\n      } catch (err) {\n        console.log(err);\n        process.exit(9);\n      }\n      break;\n    case flows.authorizationCode:\n      // start server\n      if (portNumber == 443) {\n        const options = {\n          key: DUMMY_SSL_KEY,\n          cert: DUMMY_SSL_CERT\n        };\n        const server = https\n          .createServer(options, requestListener)\n          .listen(portNumber);\n      } else {\n        const server = http.createServer(requestListener).listen(portNumber);\n      }\n      const tokenGetterUrl = `${redirectUriParsed.protocol}//${redirectUriParsed.host}`\n      console.log(\n        `Open sign-in URL in your browser to sign-in with OAuth and fetch token: ${tokenGetterUrl}`\n      );\n\n      break;\n  }\n};\n\ntry {\n  run();\n} catch (ex) {\n  console.error(ex.message);\n  process.exit(99);\n}\n"]}